install.packages("ggplot2")
install.packages("tidyr")
install.packages("stringr")
install.packages("deplyr")
install.packages("haven")
install.packages("readr")
library(dplyr)
acc2015 <- read_csv("2015/accident.csv")
library("readr")
acc2015 <- read_csv("2015/accident.csv")
acc2015 <- read_csv("2015/accident.csv")
swtwd
swtwd()
getwd
getwd()
setwd("/Users/faraaz/Desktop/MSCAPP (Quarter 4)/Data Viz for Public Policy/data-viz-for-public-policy-fall-2017/")
acc2015 <- read_csv("2015/accident.csv")
acc2015
library("haven")
acc2014 <- read_sas("2014/accident.sas7bdat")
acc2014
ls()
class(acc2014)
class(acc2015)
class(acc2014)
acc2014$TWAY_ID2
acc2014$TWAY_ID
acc2014$TWAY_ID2
mutate()
?mutate
acc2014_1 <- mutate(acc2014, na_if(x=acc2014$TWAY_ID, ""))
acc2014_1 <- mutate(acc2014, na_if(x=acc2014$TWAY_ID2, ""))
acc2014_1$TWAY_ID2
acc2014$TWAY_ID2
acc2014 <- mutate(acc2014, na_if(x=acc2014$TWAY_ID2, ""))
source('~/Desktop/MSCAPP (Quarter 4)/Data Viz for Public Policy/data-viz-for-public-policy-fall-2017/Assignment1.R')
library("readr")
library("tidyverse")
getpwd()
setwd('Users/faraaz/')
getwd()
setwd("/Users/faraaz/Desktop/MSCAPP (Quarter 4)/Data Viz for Public Policy/)
setwd("/Users/faraaz/Desktop/MSCAPP (Quarter 4)/Data Viz for Public Policy/")
data_set <- read_csv("Session 3/enr.csv")
enr_lim <- sample_frac(enr, size=0.03)
enr <- read_csv("Session 3/enr.csv")
enr_lim <- sample_frac(enr, size=0.03)
ggplot(enr_lim)
ggplot(data=enr_lim)
dim(enr)
ggplot(data=enr_lim, aes(x=read_score))
enr
range(enr_lim$read_score)
ggplot(data=enr_lim, aes(y=read_score)) # this is just aesthetic mapping
ggplot(data=enr_lim, aes(x=read_score)) # this is just aesthetic mapping
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) # this is just aesthetic mapping
ggplot(data=enr_lim, aes(x=read_score)) + geom_point()
ggplot(data=enr_lim, aes(x=read_score, y=0)) + geom_point()
ggplot(data=enr_lim, aes(x=read_score, y=math_scroe)) + geom_point()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) + geom_point()
??geom_point()
?geom_point()
??geom_point()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) + geom_boxplot() # will draw a scatter plot
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) + geom_point() # will draw a scatter plot
ggplot(data=enr_lim, aes(x=read_score, y=math_score, color=ell)) + geom_point() # will draw a scatter plot
ggplot(data=enr_lim, aes(x=read_score, y=math_score, color=ell)) + geom_point() + geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score, color=ell)) +
geom_point(aes(color=ell)) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell)) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.3) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.3) +
geom_smooth(alpha=0.3)
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.3) +
geom_smooth(aes(alpha=0.3))
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.3) +
geom_smooth(aes(alpha=0.9))
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.8) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=0.5) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=0.3) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=0.7) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=0.9) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=1.5) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=2.5) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=5.5) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=10) +
geom_smooth()
ggplot(data=enr_lim, aes(x=read_score, y=math_score)) +
geom_point(aes(color=ell), alpha=0.5, size=1) +
geom_smooth()
?geom_jitter
ggplot(data=enr_lim, aes(x=read_score)) + geom_histogram()
data(Orange)
Orange
Orange_line <- ggplot(data=Orange, aes(x=age, y=circumference)) + geom_line()
Orange_line
Orange_line <- ggplot(data=Orange, aes(x=age)) + geom_line()
Orange_line
Orange_line
Orange_line <- ggplot(data=Orange, aes(x=age)) + geom_line()
Orange_line
Orange_line <- ggplot(data=Orange, aes(x=age, y=circumference)) + geom_line()
Orange_line
ggplot(mtcars, aes(x=hp, y=mpg, size=wt)) + geom_point()
ggplot(data=Orange, aes(x=age, y=circumference)) + geom_line()
ggplot(data=Orange, aes(x=age, y=circumference, size=wt)) + geom_line()
ggplot(data=Orange, aes(x=age, y=circumference)) + geom_line()
ggplot(data=Orange, aes(x=age, y=Tree)) + geom_line()
ggplot(data=Orange, aes(x=Tree, y=age)) + geom_line()
ggplot(data=Orange, aes(x=age, y=circumference)) + geom_line()
ggplot(data=Orange, aes(x=age, y=circumference, color=Tree)) + geom_line()
Puromycin
ggplot(data=Orange, aes(x=age, y=circumference, group=Tree)) + geom_line()
heatmap(Puromycin, x = rate, y=state)
heatmap(Puromycin, x=rate, y=state)
ggplot(data=Puromycin, aes(x=rate, y=state, fill=conc)) + geom_line()
ggplot(data=Puromycin, aes(x=rate, y=state, fill=conc)) + geom_tile()
ggplot(data=Puromycin, aes(x=time, y=state, fill=conc)) + geom_tile()
ggplot(data=Puromycin, aes(x=time, y=state, fill=conc)) + geom_tile()
ggplot(data=Puromycin, aes(x=time, y=state, fill=rate)) + geom_tile()
ggplot(data=Puromycin, aes(x=time, y=state, fill=rate)) + geom_tile()
ggplot(mtcars, aes(x=hp, y=mpg, size=wt)) +
geom_point() +
scale_y_continuous(expand=c(0,0))
ggplot(mtcars, aes(x=hp, y=mpg, size=wt)) +
geom_point()# +
ggplot(mtcars, aes(x=hp, y=mpg, size=wt)) +
geom_point() +
scale_y_continuous(expand=c(0,0))
ggplot(data=Puromycin, aes(x=time, y=state, fill=rate)) + geom_tile()
ggplot(data=Puromycin, aes(x=time, y=state, fill=rate)) + geom_tile()
data(Puromycin)
ggplot(data=Puromycin, aes(x=time, y=state, fill=rate)) + geom_tile()
Puromycin$time <- as.factor(c(1:12, 1:11))
ggplot(data=Puromycin, aes(x=time, y=state, fill=rate)) + geom_tile()
acc2014_1 <- mutate(acc2014, na_if(x=acc2014$TWAY_ID2, ""))
acc2014_1$TWAY_ID2
acc2014_1$TWAY_ID2
?na_if()
mutate(acc2014, na_if(x=acc2014$TWAY_ID2, ""))
acc2014_1$TWAY_ID2
?mutate()
acc2014$TWAY_ID2
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014$TWAY_ID2 = na_if(x=acc2014$TWAY_ID2, ""))
mutate(acc2014$TWAY_ID2 = na_if(x=acc2014$TWAY_ID2, ""))
mutate(acc2014, TWAY_ID2 = na_if(x=acc2014$TWAY_ID2, ""))
acc2014$TWAY_ID2
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID22 = na_if(x=acc2014$TWAY_ID2, ""))
acc2014$TWAY_ID22
mutate(acc2014, TWAY_ID22 = na_if(x=acc2014$TWAY_ID2, ""))
mutate(acc2014, TWAY_ID2 = na_if(x=acc2014$TWAY_ID2, ""))
acc2014$TWAY_ID2
mutate(acc2014, TWAY_ID2 = na_if(x=acc2014$TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
acc2014$TWAY_ID2
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, """"))
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, "''"))
table(is.na(acc2014$TWAY_ID2))
acc2014$TWAY_ID2
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, "k"))
table(is.na(acc2014$TWAY_ID2))
acc2014$TWAY_ID2
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, d))
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, """"))
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID2 = na_if(x=TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
?if_na()
?na_if()
mutate(acc2014, TWAY_ID22 = na_if(x=TWAY_ID2, ""))
acc2014$TWAY_ID22
acc2014$TWAY_ID22
mutate(acc2014, TWAY_ID223 = na_if(x=TWAY_ID2, ""))
acc2014$TWAY_ID223
table(is.na(acc2014$TWAY_ID223))
mutate(acc2014, TWAY_ID223 = na_if(TWAY_ID2, ""))
acc2014$TWAY_ID223
mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
library("deplyr")
library("dplyr")
mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID223))
table(is.na(acc2014$TWAY_ID2))
table(is.na(acc2014$TWAY_ID2))
mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
acc2014$TWAY_ID2
k < -mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
k
k <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
k
k
k$TWAY_ID2
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
?colnames()
?%in%
acc2014[:]
acc2014[[:]]
acc2014[[:]]
acc2014[1]
colnames(acc2014)
columns_diff <- filter(col_names_2014 %in% col_names_2015)
col_names_2014 <- colnames(acc2014)
col_names_2015 <- colnames(acc2015)
columns_diff <- filter(col_names_2014 %in% col_names_2015)
acc2014
?filter
columns_diff <- col_names_2014 %in% col_names_2015
columns_diff
columns_diff <- (acc2014, col_names_2014 %in% col_names_2015)
columns_diff <- filter(acc2014, col_names_2014 %in% col_names_2015)
columns_diff
columns_diff
columns_diff <- col_names_2015 %in% col_names_2014
columns_diff
columns_diff <- col_names_2015 %in% col_names_2014
columns_diff
filter(columns_diff, col_names_2014 == TRUE)
type(columns_diff)
filter(columns_diff, col_names_2014 = TRUE)
filter(col_names_2014 = TRUE)
columns_diff <- !col_names_2015 %in% col_names_2014
columns_diff
columns_diff <- col_names_2015 %in% col_names_2014
columns_diff
%in%
?%in%
columns_diff
col_names_2014(columns_diff)
columns_diff <- col_names_2014[col_names_2014 %in% col_names_2015]
columns_diff
columns_diff <- col_names_2014[!col_names_2014 %in% col_names_2015]
columns_diff
diff_columns_in_2015 <- col_names_2015[!col_names_2015 %in% col_names_2014]
diff_columns_in_2015
[!
[!
diff_columns_in_2014 <- col_names_2014[! col_names_2014 %in% col_names_2015]
diff_columns_in_2014
diff_columns_in_2015 <- col_names_2015[! col_names_2015 %in% col_names_2014]
diff_columns_in_2015
?bind_rows
acc2014
acc2015$RUR_URB
acc <- bind_rows(acc2014, acc2015)
acc
dim(acc)
dim(acc2014)
dim(acc2015)
count(acc$RUR_URB)
?count()
count(acc, RUR_URB)
fips <- read_csv("Assignment 1/fips.csv")
glimpse(fips)
fips
acc$STATE
glimpse(fips)
type(fips)
?type
typeof(fips)
typeof(acc)
as.character(acc$STATE)
acc$STATE
acc$STATE <- as.character(acc$STATE)
acc$STATE
acc$COUNTY <- as.character(acc$COUNTY)
acc$COUNTY <- as.character(acc$COUNTY)
acc$COUNTY
library("stringr")
?str_pad()
str_pad(acc$STATE, 3, side="left", pad = 0)
str_pad(acc$STATE, 2, side="left", pad = 0)
acc$COUNTY
acc$STATE <- str_pad(acc$STATE, 2, side="left", pad = 0)
acc$COUNTY <- str_pad(acc$COUNTY, 3, side="left", pad = 0)
acc$COUNTY
acc$STATE
?rename()
rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
rename(acc, c("STATE" = "StateFIPSCode"))
rename(acc, replace=c("STATE" = "StateFIPSCode"))
library("dplyr")
rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
acc
acc$STATE
acc <- rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
library("plyr")
rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
?left_join()
acc
acc <- rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
acc
left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
dim(acc)
left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode"))
acc
dim(acc)
dim(left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode")))
dim(acc)
dim(left_join(acc, fips, by = c("StateFIPSCode", "CountyFIPSCode")))
left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
dim(acc)
acc_merge <- left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
acc_merge
acc_merge <- left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
acc_merge
dim(acc)
dim(acc_merge)
acc$FATALS
acc_merge
by_state <- group_by(acc_merge, StateName)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state <- group_by(acc_merge, StateName, YEAR)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state <- group_by(acc_merge, StateName, YEAR)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
acc_merge$YEAR
by_state <- group_by(acc_merge, StateName, CITY)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state <- group_by(acc_merge, CITY, StateName)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state
acc_merge$YEAR
by_state <- group_by(acc_merge, CITY, TWAY_ID)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state <- group_by(acc_merge, StateName)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
?group_by
by_state <- group_by(acc_merge, StateName)
summary %>% summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state <- group_by(acc_merge, StateName)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
acc_merge$YEAR
?group_by()
?summarise()
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, acc_merge$YEAR, na.rm = TRUE))
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
by_state
acc$by_state
acc$bStateName
acc$StateName
acc_merge$StateName
by_state <- group_by(acc_merge, StateName)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS, na.rm = TRUE))
summarise(by_state, total_fatalities = mean(acc_merge$FATALS, na.rm = TRUE))
by_state <- group_by(acc_merge, StateName)
summarise(by_state, total_fatalities = mean(acc_merge$FATALS, na.rm = TRUE))
by_state
summarise(by_state, total_fatalities = n())
by_state <- group_by(acc_merge, StateName)
by_state
summarise(by_state, total_fatalities = n())
)
summarise(by_state, total_fatalities = sum(acc_merge$FATALS))
summarise(by_state, total_fatalities = n())
by_state <- group_by(acc_merge, StateName, YEAR)
by_state
summarise(by_state, total_fatalities = n())
by_state <- group_by(acc_merge, StateName, YEAR)
summarise(by_state, total_fatalities = n())
by_state
dim(acc_merge$StateName)
dim(acc_merge$StateFIPSCode)
acc_merge <- left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
by_state <- group_by(acc_merge, StateName, YEAR)
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
by_state <- group_by(acc_merge, StateName, YEAR)
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
by_state <- group_by(acc_merge, StateName)
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
tot_fatalities
by_state <- group_by(acc_merge, StateName)
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
dim(tot_fatalities)
tot_fatalities
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
by_state <- group_by(acc_merge, StateName, YEAR)
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
tot_fatalities
by_state <- group_by(acc_merge, StateName, YEAR)
tot_fatalities <- summarise(by_state, total_fatalities = count(acc_merge$FATALS))
tot_fatalities
acc_merge$StateName
length(acc_merge$StateName)
length(acc_merge$FATALS)
library("tidyr")
?spread()
?arrange()
?filter()
?filter
acc <- rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"), copy = True)
acc <- rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
acc
function (..., .id = NULL)
acc <- bind_rows(acc2014, acc2015)
acc
acc2015 <- read_csv("2015/accident.csv")
acc2015
acc2014 <- read_sas("2014/accident.sas7bdat")
acc2014
ls()
library("haven")
library("readr")
library("haven")
library("dplyr")
library("tidyr")
library("stringr")
library("ggplot2")
acc2015 <- read_csv("2015/accident.csv")
acc2015
acc2015 <- read_csv("2015/accident.csv")
getwd()
setwd("/Users/faraaz/Desktop/MSCAPP (Quarter 4)/Data Viz for Public Policy/data-viz-for-public-policy-fall-2017/Assignment_1/")
acc2015 <- read_csv("2015/accident.csv")
acc2015
acc2014 <- read_sas("2014/accident.sas7bdat")
acc2014
ls()
class(acc2014)
class(acc2015)
acc2014$TWAY_ID2
acc2014 <- mutate(acc2014, TWAY_ID2 = na_if(TWAY_ID2, ""))
table(is.na(acc2014$TWAY_ID2))
dim(acc2014)
dim(acc2015)
col_names_2014 <- colnames(acc2014)
col_names_2015 <- colnames(acc2015)
diff_columns_in_2014 <- col_names_2014[! col_names_2014 %in% col_names_2015]
diff_columns_in_2014
diff_columns_in_2015 <- col_names_2015[! col_names_2015 %in% col_names_2014]
diff_columns_in_2015
acc <- bind_rows(acc2014, acc2015)
count(acc, RUR_URB)
count(acc$RUR_URB)
count(acc$RUR_URB)
fips <- read_csv("Assignment 1/fips.csv")
fips <- read_csv("fips.csv")
glimpse(fips)
acc$STATE <- as.character(acc$STATE)
acc$COUNTY <- as.character(acc$COUNTY)
acc$STATE <- str_pad(acc$STATE, 2, side="left", pad = 0)
acc$COUNTY <- str_pad(acc$COUNTY, 3, side="left", pad = 0)
acc <- rename(acc, c("STATE" = "StateFIPSCode", "COUNTY" = "CountyFIPSCode"))
acc
acc_merge <- left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
by_state_year <- group_by(acc_merge, StateName, YEAR)
agg <- summarise(by_state_year, total_fatalities = count(acc_merge$FATALS))
agg
agg_wide <- spread(agg, key = StateName, value = total_fatalities)
agg_wide <- spread(agg, key = agg$StateName, value = total_fatalities)
agg_wide <- spread(agg, key = agg$StateName, value = total_fatalities)
agg$StateName
acc_merge <- left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
agg <- acc %>% group_by(StateName, YEAR)
agg <- agg %>% summarize(TOTAL = sum(FATALS))
acc_merge <- left_join(acc, fips, by = c("StateFIPSCode" = "StateFIPSCode", "CountyFIPSCode" =  "CountyFIPSCode"))
agg <- acc %>% group_by(StateName, YEAR)
agg <- acc_merge %>% group_by(StateName, YEAR)
agg <- agg %>% summarize(TOTAL = sum(FATALS))
agg_wide <- agg %>% spread(key = StateName, value = TOTAL)
agg_wide <- agg %>% spread(key = StateName, value = TOTAL)
agg_wide <- spread(agg, key = StateName, value = total_fatalities)
by_state_year <- group_by(acc_merge, StateName, YEAR)
agg <- summarise(by_state_year, total_fatalities = count(acc_merge$FATALS))
agg_wide <- spread(agg, key = StateName, value = total_fatalities)
agg_wide_new <- mutate(agg_wide, lag = lag(total_fatalities)) %>% mutate(percent_difference =  ((total_fatalities-lag)/lag)*100)
agg_wide <- spread(agg, key = StateName, value = total_fatalities)
